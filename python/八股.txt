python的基础数据类型

数字型--整形，浮点型，复数，布尔
元组
字典
字符串
列表
集合

Python是动态强类型
静/动态: 编绎/运行 时确定变量类型

弱/强类型: 会/不会发生隐式类型转换

python和python3的区别
1.print 成为了函数
2.编码问题。3不再有Unicode对象，默认str就是unicode
3.出发变化
4.类型注解
5.用super调用父类的函数



什么是自省

深拷贝和浅拷贝

什么是gil？
全局解释锁 他是解释器中一种线程同步的方式
每一个解释器进程中都有一个gil，他的直接作用就是限制单个解释器进程中多个线程的并行执行，使得即使在多核处理器上对于单个解释器进程来说，在同一时刻运行进程仅限一个。对于python来讲，gil并不是他语言特性，二是cpython解释器的实现特性
1.gil限制python的多核执行
2.同一个时间只有一个线程执行字节码
3.cpu密集程序难以利用多核优势
4.io期间会释放gil 对io密集程序影响不大
面对GIL的存在，我们有可以有多个方法帮助我们提升性能
1在io密集的程序可以使用多线程或者协程来完成
2可以更换jpython没有gil的解释器
3cpu密集可以使用多进程+进程池
为什么有了GIL还要关注线程安全？
GIL 保证的是每一条字节码在执行过程中的独占性，即每一条字节码的执行都是原子性的。GIL 具有释放机制，所以 GIL 并不会保证字节码在执行过程中线程不会进行切换，即在多个字节码之间，线程具有切换的可能性。

